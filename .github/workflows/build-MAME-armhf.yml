name: Build REG-linux MAME-armhf

on:
  workflow_dispatch:

concurrency:
    group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
  contents: write

env:
  LANG: en_US.UTF-8
  LANGUAGE: en_US:en
  LC_ALL: en_US.UTF-8
  FORCE_UNSAFE_CONFIGURE: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build REG-linux MAME-armhf
    runs-on: ${{ matrix.os }}
    outputs:
      mameversion: ${{ steps.prepare_step.outputs.mameversion }}
      docompile: ${{ false || steps.prepare_step.outputs.docompile }}
      dorelease: ${{ false || steps.compile_step.outputs.dorelease }}
    strategy:
      matrix:
        os: [ubuntu-24.04-arm]
        platform: [bcm2836]
      fail-fast: false
    steps:
      - name: Prepare ${{ matrix.platform }}
        id: prepare_step
        shell: bash
        run: |
          rm -rf ./REG-LINUX
          git clone --branch master "https://github.com/REG-Linux/REG-Linux.git" ./REG-LINUX
          cd REG-LINUX
          git submodule init
          git submodule update
          rm -rf .git .github buildroot/.github buildroot/.gitlab
          
          # Merge buildroot patches
          CUSTOM_DIR="${GITHUB_WORKSPACE}/REG-LINUX/custom" BUILDROOT_DIR="${GITHUB_WORKSPACE}/REG-LINUX/buildroot" "${GITHUB_WORKSPACE}/REG-LINUX/scripts/linux/mergeToBR.sh"
          
          # Version
          mameversion=$(cat package/emulators/mame/mame.mk | grep GroovyMAME | grep Version | cut -d " " -f 4)
          echo "mameversion=${mameversion}" >> "$GITHUB_OUTPUT"
          echo "mameversion=${mameversion}"
          
          # Get file if already released and avoid compiling again
          wget -q -nd -P "${GITHUB_WORKSPACE}/" "https://github.com/${GITHUB_REPOSITORY}/releases/download/${mameversion}/reglinux-mame-${mameversion}-${{ matrix.platform }}.tar.gz" || ${{ true }}
          if ! gzip -qt "${GITHUB_WORKSPACE}/reglinux-mame-${mameversion}-${{ matrix.platform }}.tar.gz"
          then
            echo "docompile=${{ true }}" >> "$GITHUB_OUTPUT"
            
            # Free disk space and set big swap before compiling
            sudo apt-get -y remove '*azure*' '*firefox*' '*dotnet*' '*php*' '*cloud*' && sudo apt-get -y autoremove && sudo apt-get -y clean && sudo rm -rf /var/lib/apt/lists/*
            export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
            echo "Swap file: $SWAP_FILE"
            if [ -z "$SWAP_FILE" ]; then
              SWAP_FILE=/swapfile
            else
              sudo swapoff $SWAP_FILE
              sudo rm $SWAP_FILE
            fi
            sudo fallocate -l 24G $SWAP_FILE
            sudo chmod 600 $SWAP_FILE
            sudo mkswap $SWAP_FILE
            sudo swapon $SWAP_FILE
            echo "Memory and swap:"
            free -h
            swapon --show
            df -BG --output=avail ./
          fi

      - name: Restore ${{ matrix.platform }}
        id: restore_cache
        if: ${{ steps.prepare_step.outputs.docompile }}
        uses: actions/cache/restore@v4
        with:
          path: REG-LINUX/buildroot/output
          key: ${{ matrix.os }}-${{ matrix.platform }}-${{ steps.prepare_step.outputs.mameversion }}

      - name: Compile ${{ matrix.platform }}
        id: compile_step
        if: ${{ steps.prepare_step.outputs.docompile }}
        shell: bash
        run: |
          cd REG-LINUX
          rm -f board/broadcom/bcm2836/patches/mame/switchres-no-xrandr.patch
          
          patch -u -p1 <<EOF
          --- a/package/emulators/libretro/libretro-mame/libretro-mame.mk
          +++ b/package/emulators/libretro/libretro-mame/libretro-mame.mk
          @@ -18,14 +18,15 @@
           endif
           
           # Limit number of jobs not to eat too much RAM....
          -LIBRETRO_MAME_MAX_JOBS = 32
          +LIBRETRO_MAME_MAX_JOBS = 5
           LIBRETRO_MAME_JOBS = \$(shell if [ \$(PARALLEL_JOBS) -gt \$(LIBRETRO_MAME_MAX_JOBS) ]; then echo \$(LIBRETRO_MAME_MAX_JOBS); else echo \$(PARALLEL_JOBS); fi)
           
          -LIBRETRO_MAME_EXTRA_ARGS += PTR64=1
          -ifeq (\$(BR2_x86_64),y)
          -LIBRETRO_MAME_EXTRA_ARGS += LIBRETRO_CPU=x86_64 PLATFORM=x86_64
          +ifeq (\$(BR2_arm),y)
          +LIBRETRO_MAME_EXTRA_ARGS += PTR64=0 LIBRETRO_CPU=arm PLATFORM=arm
          +else ifeq (\$(BR2_x86_64),y)
          +LIBRETRO_MAME_EXTRA_ARGS += PTR64=1 LIBRETRO_CPU=x86_64 PLATFORM=x86_64
           else ifeq (\$(BR2_RISCV_64),y)
          -LIBRETRO_MAME_EXTRA_ARGS += LIBRETRO_CPU=riscv64 PLATFORM=riscv64
          +LIBRETRO_MAME_EXTRA_ARGS += PTR64=1 LIBRETRO_CPU=riscv64 PLATFORM=riscv64
           else ifeq (\$(BR2_aarch64),y)
           LIBRETRO_MAME_EXTRA_ARGS += PTR64=1 LIBRETRO_CPU=arm64 PLATFORM=arm64
           LIBRETRO_MAME_ARCHOPTS += -D__aarch64__
          EOF
          
          patch -u -p1 <<EOF
          --- a/package/emulators/mame/mame.mk
          +++ b/package/emulators/mame/mame.mk
          @@ -18,11 +18,14 @@
           MAME_SUFFIX=
          
           # Limit number of jobs not to eat too much RAM....
          -MAME_MAX_JOBS = 32
          +MAME_MAX_JOBS = 5
           MAME_JOBS = \$(shell if [ \$(PARALLEL_JOBS) -gt \$(MAME_MAX_JOBS) ]; then echo \$(MAME_MAX_JOBS); else echo \$(PARALLEL_JOBS); fi)
          
          -# Set PTR64 always on we do not build for 32-bit architectures
          +ifeq (\$(BR2_arm),y)
          +MAME_CROSS_OPTS += PTR64=0
          +else
           MAME_CROSS_OPTS += PTR64=1
          +endif
          
           # All platforms run Wayland, no X11
           MAME_CROSS_OPTS += NO_X11=1 NO_USE_XINPUT=1 USE_WAYLAND=1
          @@ -43,7 +46,10 @@
           endif
          
           # Define cross-architecture, adjust DRC backend
          -ifeq (\$(BR2_x86_64),y)
          +ifeq (\$(BR2_arm),y)
          +MAME_CROSS_ARCH = arm
          +MAME_CFLAGS += -mcpu=cortex-a7 -mtune=cortex-a7 -mfloat-abi=hard -D__ARM_NEON__ -D__ARM_NEON -DEGL_NO_X11=1
          +# Temp hack for 32-bit architectures : disable WERROR to avoid switchres log warning treated as error
          +MAME_CROSS_OPTS += NOWERROR=1
          +else ifeq (\$(BR2_x86_64),y)
           MAME_CROSS_ARCH = x86_64
           else ifeq (\$(BR2_aarch64),y)
           MAME_CROSS_ARCH = arm64
          EOF
          
          # After each package is compiled and installed, keep only newest 4
          sed -i '/stamp_installed\:/,/stamp_dircleaned\:/ s:^$:\tfind \$(BUILD_DIR) -mindepth 1 -maxdepth 1 -type d -printf "%T\@\\t%p\\n" | sort -g | head -n -4 | cut -f 2- | xargs -d "\\n" -I\{\} -n1 -rt -- find \{\} -type f -not \\\( -iname ".stamp*" -or -iname ".br*" -or -iname ".files*" -or -iname ".applied*" -or -iname "Makefile*" -or -iname "*cmake*" -or -ipath "*conf*" \\\) -delete \n\tdf -BG --output=avail ./ \n:' buildroot/package/pkg-generic.mk
          
          # After each downloaded package is extracted, delete older and keep latest 2
          sed -i 's:(TAR_OPTIONS) -:(TAR_OPTIONS) - \&\& find \$\$(DL_DIR) -mindepth 1 -maxdepth 1 -type d -printf "%T\@\\t%p\\n" | sort -g | head -n -2 | cut -f 2- | xargs -r rm -rf :' buildroot/package/pkg-generic.mk
          
          # Disable CCACHE and BR2_PER_PACKAGE_DIRECTORIES
          sed -i "/BR2_CCACHE/d" configs/reglinux-board.common
          sed -i "/BR2_PER_PACKAGE_DIRECTORIES/d" configs/* Makefile
          
          # Enable the flag to build MAME from source
          sed -i s/#BR2_PACKAGE_MAME_BUILD_FROM_SOURCE=y/BR2_PACKAGE_MAME_BUILD_FROM_SOURCE=y/ configs/reglinux-board.common
          
          # Delete last package build sub folder to force recompile
          find "${GITHUB_WORKSPACE}/REG-LINUX/buildroot/output/build" -mindepth 1 -maxdepth 1 -type d ! -exec test -e "{}/.stamp_installed" \; -exec rm -rf "{}" \; || true
          
          # Build
          "${GITHUB_WORKSPACE}/REG-LINUX/configs/createDefconfig.sh" "${GITHUB_WORKSPACE}/REG-LINUX/configs/reglinux-${{ matrix.platform }}"
          CCACHE_DISABLE=1 make BR2_EXTERNAL="${GITHUB_WORKSPACE}/REG-LINUX" -C "${GITHUB_WORKSPACE}/REG-LINUX/buildroot" reglinux-${{ matrix.platform }}_defconfig
          CCACHE_DISABLE=1 make BR2_EXTERNAL="${GITHUB_WORKSPACE}/REG-LINUX" -C "${GITHUB_WORKSPACE}/REG-LINUX/buildroot" mame libretro-mame
          
          # Create package
          cd "${GITHUB_WORKSPACE}/REG-LINUX/buildroot/output/target" || exit 1
          tar czf  "${GITHUB_WORKSPACE}/reglinux-mame-${{ steps.prepare_step.outputs.mameversion }}-${{ matrix.platform }}.tar.gz" usr/bin/mame usr/share/mame usr/lib/libretro/mame_libretro.so usr/share/lr-mame
          
          echo "dorelease=${{ true }}" >> "$GITHUB_OUTPUT"

      - name: Save cache ${{ matrix.platform }}
        id: save_cache
        if: ${{ steps.prepare_step.outputs.docompile && ! cancelled() }}
        uses: actions/cache/save@v4
        with:
          path: REG-LINUX/buildroot/output
          key: ${{ matrix.os }}-${{ matrix.platform }}-${{ steps.prepare_step.outputs.mameversion }}-${{ github.run_id }}

      - name: Create release
        id: create_release
        if: ${{ steps.compile_step.outputs.dorelease }}
        uses: softprops/action-gh-release@master
        with:
          files: reglinux-mame-${{ steps.prepare_step.outputs.mameversion }}-*
          tag_name: ${{ steps.prepare_step.outputs.mameversion }}
          prerelease: false
          generate_release_notes: true
          name: MAME-armhf ${{ steps.prepare_step.outputs.mameversion }}
